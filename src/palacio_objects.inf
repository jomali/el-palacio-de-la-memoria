

!!==============================================================================
!!
!!	EL PALACIO DE LA MEMORIA
!!	Definición de localidades y objetos
!!
!!==============================================================================
!!
!!	Archivo:		palacio_objects.inf
!!	Autor(es):		J. Francisco Martín <jfm.lisaso@gmail.com>
!!	Idioma:			ES (Español)
!!	Sistema:		Inform-INFSP 6
!!	Plataforma:		Máquina-Z/Glulx
!!	Versión:		0.0
!!	Fecha:			2018/06/12
!!
!!------------------------------------------------------------------------------
!!
!!	Este archivo forma parte de la ficción interactiva
!!	EL PALACIO DE LA MEMORIA.
!!
!!	EL PALACIO DE LA MEMORIA es software libre: usted puede
!!	redistribuirlo y/o modificarlo bajo los términos de la Licencia
!!	Pública General GNU publicada por la Fundación para el Software
!!	Libre, ya sea la versión 3 de la Licencia, o (a su elección)
!!	cualquier versión posterior.
!!
!!	EL PALACIO DE LA MEMORIA se distribuye con la esperanza de que sea
!!	útil, pero SIN GARANTÍA ALGUNA; ni siquiera la garantía implícita
!!	MERCANTIL o de APTITUD PARA UN PROPÓSITO DETERMINADO. Consulte los
!!	detalles de la Licencia Pública General GNU para más información.
!!
!!	Debería haber recibido una copia de la Licencia Pública General GNU
!!	junto a EL PALACIO DE LA MEMORIA. En caso contrario, consulte
!!	<http://www.gnu.org/licenses/>.
!!
!!	Copyright (c) 2018, J. Francisco Martín
!!
!!------------------------------------------------------------------------------
!!
!!	TABLA DE CONTENIDOS
!!
!!	<>	Limbo
!!	<>	Cala de los cangrejos
!!	<>	Cocina
!!	<>	Dormitorio principal
!!	<>	Habitación multiusos
!!	<>	Pasillo de la segunda planta
!!	<>	Patio delantero
!!	<>	Recibidor
!!	<>	Salón
!!	<>	Terraza trasera
!!
!!------------------------------------------------------------------------------


!!==============================================================================
!!
!!	@Limbo
!!
!!------------------------------------------------------------------------------

Room	Limbo "En algún lugar"
 with	name_f	'babia',
		name_m	'limbo' 'lugar' 'sueno' 'vacio',
		gender	G_MASCULINO,
		description [;
			O__M(self, 1);
			if (self hasnt visited) O__M(self, 2);
			new_line;
			return true;
		],
		clarification 0,
 has	male;

NPC		-> Silvia "Silvia"
 with	name_f	'chica' 'joven' 'mujer' 'persona' 'protagonista' 'silvia',
		name_m	'personaje',
		gender	G_FEMENINO,
		adjectives 'principal',
		capacity MAX_CARRIED,
		description [; <<Inv>>; ],
		inventory_flag false,
 has	female proper;

Item	-> -> Ropa "ropa"
 class	Clothes,
 with	name_f	'falda' 'indumentaria' 'prenda' 'ropa' 'vestimenta',
		name_fp	'faldas' 'medias' 'prendas' 'vestimentas',
		name_m	'atavio' 'atuendo' 'panty' 'vestido' 'vestuario',
		name_mp	'atavios' 'atuendos' 'pantys',
		gender	G_FEMENINO,
		adjectives 'luto' 'negra' 'negras' 'negro',
		article "su",
		description [
			obj;
			obj = parent(self);
			!! 1) Silvia tiene la ropa puesta:
			if (obj == player && self has worn) <<Inv>>;
			!! 2) La ropa está en el perchero del recibidor:
			else if (obj == Perchero) return O__M(self, 1, obj);
			!! 3) La ropa está en un contenedor:
			else if (obj has container) return O__M(self, 2, obj);
			!! 4) La ropa está en un soporte:
			else if (obj has supporter) return O__M(self, 3, obj);
			!! 5) La ropa está en el suelo:
			else if (obj == real_location) return O__M(self, 4, obj);
			!! 6) General:
			else return O__M(self, 5, obj);
		],
		before [;
			if (self.Clothes::before()) return true;
			Iron:
				return O__M(self, 10);
			Take:
				!! Se registra el contenedor previo antes de coger la ropa para
				!! que, en caso de no poder vestirla, devolverla al sitio en el
				!! que se encontraba:
				self.previous_container = parent(self);
				return false;
		],
		after [;
			Disrobe:
				!! 1) Silvia se desnuda y deja la ropa en el perchero:
				if (real_location == Recibidor) {
					move self to Perchero;
					return O__M(self, 7, Perchero);
				}
				!! 2) Silvia se desnuda y deja la ropa en el sofá:
				!! TODO
				!! 3) Silvia se desnuda y deja la ropa sobre la cama:
				!! TODO
				!! 4) Silvia se desnuda y deja la ropa en el suelo:
				move self to real_location;
				return O__M(self, 6);
			Take:
				<Wear self>;
				!! Si no se ha podido poner la ropa, se coloca de nuevo en el
				!! lugar en el que estaba:
				if (self hasnt worn) move self to self.previous_container;
				return true;
		],
		layers 1,
 private
		previous_container 0,
 has	clothing female worn;

Item	-> -> Zapatos "zapatos"
 class	Clothes,
 with	name_m	'calzado' 'zapato',
		name_mp	'zapatos',
		gender	G_MASCULINO + G_PLURAL,
		adjectives
			'brillante' 'brillantes' 'cepillado' 'cepillados' 'negro' 'negros'
			'reluciente' 'relucientes',
		article "sus",
		description [
			obj;
			O__M(self, 1);
			if (self hasnt described) O__M(self, 2);
			obj = parent(self);
			if (obj == real_location) O__M(self, 3, obj);
			else if (obj has container) O__M(self, 4, obj);
			else if (obj has supporter) O__M(self, 5, obj);
			else if (obj ~= player) O__M(self, 6, obj);
			new_line;
			return true;
		],
		before [;
			if (self.Clothes::before()) return true;
		],
		after [;
			Wear:
				if (real_location == Cala) return O__M(self, 7);
		],
		layers 2 3,
 has	clothing male pluralname worn;

Atrezzo Cielo "cielo"
 with	found_in [; if (location ofclass Outdoors) return true; ],
		name_f	'nube',
		name_fp	'nubes',
		name_m	'cielo' 'firmamento' 'nubarron' 'sol' 'tiempo',
		name_mp	'nubarrones',
		gender	G_MASCULINO,
		adjectives 'despejado' 'luminoso' 'noviembre',
		description [; return O__M(self, 1); ],
 has	male;

Atrezzo	Suelo "suelo"
 with	found_in [; return true; ],
		name_m	'pavimento' 'piso' 'suelo' 'terreno',
		gender	G_MASCULINO,
		react_before [;
			if (noun ~= nothing && second == self)
				second = nothing;
		],
 has	male;


!!==============================================================================
!!
!!	@Cala
!!
!!------------------------------------------------------------------------------

Outdoors	Cala "Cala de los cangrejos"
 with	name_f	'abra' 'arena' 'bahia' 'cala' 'caleta' 'costa' 'ensenada'
				'grava' 'gravilla' 'orilla' 'playa' 'rada',
		name_m	'ancon' 'grao' 'grijillo' 'grijo' 'litoral',
		gender	G_FEMENINO,
		adjectives 'cangrejos',
		description [; return O__M(self, 1);
		],
		s_to	Sendero,
		u_to	[; return self.s_to(); ],
 has	female;

!!------------------------------------------------------------------------------

Array marFlags -> 5; ! hasta 32 flags
Atrezzo	-> Mar "mar"
 with	name_f	'espuma' 'ola',
		name_fp	'olas',
		name_m	'agua' 'atlantico' 'cantabrico' 'mar' 'oceano' 'oleaje',
		gender	G_MASCULINO,
		description [
			i previous_style;
			!! i = Shuffle(21, marFlags) * 2;
			i = Shuffle(8, marFlags) * 2;
			previous_style = UseTextStyle(TEXT_STYLE_STRESSED);
			O__M(self, i);
			UseTextStyle(previous_style);
			new_line;
			O__M(self, (i-1));
			new_line;
			return true;
		],
 has	male;

Item	Sendero "sendero"
 with	found_in Cala Terraza,
		name_f	'bajada' 'cuesta' 'ladera' 'inclinacion' 'pendiente' 'pena'
			'piedra' 'rampa' 'roca' 'subida',
		name_fp	'piedras' 'rocas',
		name_m	'acantilado' 'camino' 'desnivel' 'escollo' 'risco' 'sendero',
		name_mp	'acantilados' 'escollos' 'riscos',
		gender	G_MASCULINO,
		adjectives 'rocosa' 'rocoso',
		description [;
			if (location == Cala) return O__M(self, 1);
 			else return O__M(self, 2);
		],
		door_dir [;
			if (location == Cala) return s_to;
			else return n_to;
		],
		door_to [;
			if (location == Cala) {
				if (IndirectlyContains(player, Zapatos) && Zapatos has worn) {
					PronounNotice(Zapatos);
					return O__M(self, 3, true);
				} else {
					O__M(self, 4);
					new_line;
					return Terraza;
				}
			}
			if (location == Terraza) {
				if (IndirectlyContains(player, Zapatos) && Zapatos has worn) {
					PronounNotice(Zapatos);
					return O__M(self, 3, false);
				} else {
					O__M(self, 5);
					new_line;
					return Cala;
				}
			}
		],
 has	door male open ~openable scenery;

Atrezzo	-> CasaCala "casa"
 with	name_f	'casa' 'enredadera' 'fachada',
		name_fp	'enredaderas',
		name_m	'edificio' 'verdin',
		gender	G_FEMENINO,
		adjectives 'blanca' 'blanco' 'planta',
		description [; return O__M(self, 1); ],
 has	female;


!!==============================================================================
!!
!!	@Cocina
!!
!!------------------------------------------------------------------------------

Indoors	Cocina "cocina"
 with	name_f	'cocina' 'estancia' 'habitacion',
		gender	G_FEMENINO,
		description [
			obj n_encimera n_mesa;
 			objectloop(obj in Encimera && obj hasnt concealed) {
				give obj workflag;
				n_encimera++;
			}
			objectloop(obj in MesaCocina && obj hasnt concealed) {
				give obj workflag;
				n_mesa++;
			}
			O__M(self, 1);
			if (n_encimera > 0) {
				new_line;
				O__M(self, 2, Encimera);
				if (n_mesa > 0) O__M(self, 3, MesaCocina);
				return O__M(self, 4);
			}
			if (n_mesa > 0) {
				new_line;
				O__M(self, 2, MesaCocina);
				return O__M(self, 4);
			}
		],
		n_to	Terraza,
		e_to	Salon,
		out_to	[; return self.n_to(); ],
 has	female;

Atrezzo	-> ArmarioCocina "armario"
 with	name_m	'armario' 'mobiliario' 'mueble',
		name_mp	'muebles',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
 has	concealed female;

Atrezzo	-> Frigorifico "frigorífico"
 with	name_m	'electrodomestico' 'frigorifico' 'mobiliario' 'mueble',
		name_mp	'electrodomesticos' 'muebles',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
 has	concealed male;

Atrezzo	-> HornoLena "horno de leña"
 with	name_m	'horno',
		gender	G_MASCULINO,
		adjectives 'forja' 'hierro' 'lena',
		description [;
			O__M(self, 1);
			if (self hasnt described) O__M(self, 2);
			new_line;
			return true;
		],
 has	male;

Item	-> Encimera "encimera"
 with	name_f	'encimera',
		name_m	'mobiliario' 'muebles',
		name_mp	'muebles',
		gender	G_FEMENINO,
		description [
			obj n;
			obj = n = 0;
			objectloop(obj in self && obj hasnt concealed) n++;
			if (n == 0) return O__M(self, 1);
			else return O__M(self, 2);
		],
		before [;
			DefaultAction, Examine, LetGo, Receive, Search:
				return false;
			default:
				print "No es necesario que se preocupe por ";
				SpanishNominativePronoun(self);
				".";
		],
 has	concealed female scenery supporter transparent;

!! Atrezzo	-> -> Cafetera "cafetera de cápsulas"
!!  with	name_f	'cafetera',
!! 		gender	G_FEMENINO,
!! 		adjectives 'capsulas',
!! 		description [; return O__M(self, 1); ],
!!  has	female;

!! Atrezzo	-> -> Radiocasete "radiocasete"
!!  with	name_f	'radio',
!! 		name_m	'radiocasete',
!! 		gender	G_MASCULINO,
!! 		description [; return O__M(self, 1); ],
!!  has	male;

Furniture	-> MesaCocina "mesa"
 with	name_f	'mesa' 'silla',
		name_fp	'sillas',
		name_m	'mobiliario' 'mueble',
		name_mp	'muebles',
		gender	G_FEMENINO,
		description [
			obj n;
			obj = n = 0;
			objectloop(obj in self) n++;
			O__M(self, 1);
			if (n++) O__M(self, 2);
			new_line;
			return true;
		],
 has	concealed female supporter transparent;

Item	-> -> Bolso "bolso"
 class	Clothes,
 with	name_f	'bandolera' 'bolsa',
		name_m	'bolso',
		gender	G_MASCULINO,
		adjectives 'silvia' 'su',
		article "su",
		description [
			i obj;
			i = obj = 0;
			objectloop(obj in self && obj hasnt concealed) i++;
			O__M(self, 1);
			if (i > 0) O__M(self, 2);
			new_line;
			return true;
		],
		before [;
			if (self.Clothes::before()) return true;
		],
		after [
			i obj;
			LetGo, Receive:
				i = obj = 0;
				objectloop(obj in self && obj has remarkable) i++;
				if (i > 0) give self remarkable;
				else give self ~remarkable;
		],
		layers 3,
 has	container male open remarkable;

Item	-> -> -> Llaves "llaves"
 with	name_f	'llave' 'muñeca' 'muñequita' 'sally',
		name_fp	'llaves',
		name_m	'llavero' 'muñeco' 'muñequito',
		gender	G_FEMENINO + G_PLURAL,
		adjectives 'silvia' 'su',
		article	"sus",
		description [;
			O__M(self, 1);
			if (self hasnt described) { new_line; O__M(self, 2); }
			return true;
		],
 has	female pluralname remarkable;


!!==============================================================================
!!
!!	@Dormitorio
!!
!!------------------------------------------------------------------------------

Indoors	Dormitorio "Dormitorio principal"
 with	name_f	'estancia' 'habitacion',
		name_m	'cuarto' 'dormitorio',
		gender	G_MASCULINO,
		adjectives 'principal',
		description [
			i;
			if (Cama.state == 0) i++;
			if (Camisa hasnt moved) i++;
			O__M(self, 1);
			if (Cama.state == 0) {
				O__M(self, 2);
				if (i == 1) O__M(self, 6);
				if (i == 2) O__M(self, 5);
			}
			if (Camisa hasnt moved) {
				O__M(self, 3);
				if (i > 0) O__M(self, 6);
			}
			return O__M(self, 4);
		],
		w_to [;
			if (self has general) {
				give self ~general;
				O__M(self, 7);
				new_line;
			}
			return Pasillo;
		],
		out_to	[; return self.w_to(); ],
 has	male;

!!	-	'general' se activa para evitar las comprobaciones de 'react_before'
!! Atrezzo	-> Oscuridad "oscuridad"
!!  with	name_f	'lobreguez' 'negrura' 'oscuridad' 'penumbra' 'tenebrosidad',
!! 		name_fp	'penumbras' 'sombras' 'tinieblas',
!! 		gender	G_FEMENINO,
!! 		article	"la",
!! 		description [; <<Look>>; ],
!! 		react_before [;
!! 			if (self has general) return false;
!! 			Blow, Listen, Rub, SetTo, Smell, Taste, Touch:
!! 				if (self has general) return false;
!! 				if (noun == nothing or player or self)
!! 					return false;
!! 				if (IndirectlyContains(player, noun))
!! 					return false;
!! 				if (noun == self.exception)
!! 					return false;
!! 				return self.cannot_find_object(noun);
!! 			Close:
!! 				if (noun hasnt openable)
!! 					return false;
!! 				if (noun == self.exception)
!! 					return false;
!! 				return self.cannot_find_object(noun);
!! 			Consult, Examine, Look, LookUnder, Read, Search:
!! 				if (noun == nothing or player or self)
!! 					return false;
!! 				if (noun == location or real_location)
!! 					return false;
!! 				if (noun == self.exception)
!! 					return false;
!! 				return self.cannot_see_object(noun);
!! 			Dance:
!! 				return O__M(self, 1);
!! 			Empty, EmptyT, Insert, PutOn, Remove, Transfer:
!! 				if (noun hasnt supporter or container)
!! 					return false;
!! 				if (IndirectlyContains(player, noun))
!! 					return false;
!! 				if (second ~= nothing && IndirectlyContains(player, second))
!! 					return false;
!! 				return self.cannot_find_object(noun);
!! 			Jump, JumpOver:
!! 				return O__M(self, 2);
!! 			Lock, Unlock:
!! 				if (noun hasnt lockable)
!! 					return false;
!! 				if (IndirectlyContains(player, noun))
!! 					return false;
!! 				return self.cannot_find_object(noun);
!! 			Open:
!! 				if (noun hasnt openable)
!! 					return false;
!! 				if (noun == self.exception)
!! 					return false;
!! 				return self.cannot_find_object(noun);
!! 			Pull, Push, PushDir, Take:
!! 				if (noun has scenery or static)
!! 					return false;
!! 				if (noun == nothing or player)
!! 					return false;
!! 				if (IndirectlyContains(player, noun))
!! 					return false;
!! 				if (noun == self.exception)
!! 					return false;
!! 				return self.cannot_find_object(noun);
!! 			Swing:
!! 				return self.not_a_good_idea("columpiándose");
!! 			Wear:
!! 				if (noun hasnt clothing) return false;
!! 				return self.cannot_find_object(noun);
!! 		],
!! 		exception Cortinas,
!!  private
!! 		cannot_see_object [;
!! 		],
!! 		cannot_find_object [;
!! 		],
!! 		not_a_good_idea [;
!! 		],
!!  has	female;

Furniture	-> Cama "cama"
 class	SmartEnterable
 with	name_f	'cama' 'piltra',
		name_m	'camastro' 'catre' 'colchon' 'jergon' 'lecho' 'mobiliario'
			'moblaje' 'mueble' 'somier',
		name_mp	'muebles',
		gender	G_FEMENINO,
		adjectives 'desecha' 'desecho' 'hacer' 'sin',
		describe [
			obj i;
			if (child(self) == nothing)
				return true;
			objectloop(obj in self && obj ~= player
				&& obj hasnt scenery or concealed) i++;
			if (i == 0)
				return false;
			new_line;
			return O__M(self, 5);
		],
		description [
			obj i;
			objectloop(obj in self && obj ~= player
				&& obj hasnt scenery or concealed) i++;
			switch (self.state) {
				0:	O__M(self, 1);
				1:	O__M(self, 2);
				2:	O__M(self, 3);
			}
			if (i > 0) O__M(self, 4);
			new_line;
			return true;
		],
		react_before [;
			if (self.SmartEnterable::react_before()) return true;
			Jump, Swing:
				if (noun == nothing && IndirectlyContains(self, player))
					<<JumpOver self>>;
			Sit:
				if (noun == nothing)
					<<Sit self>>;
			Sleep:
				if (noun == nothing)
					<<Sleep self>>;
		],
		before [;
			Climb:
				<<Enter self>>;
			Iron:
				if (self.state == 1) return O__M(self, 9);
				else {
					self.state = 1;
					return O__M(self, 8);
				}
			JumpOver:
				return O__M(self, 10);
			LookUnder:
				return O__M(self, 11);
			Sit:
				if (~~IndirectlyContains(self, player))
					<<Enter self>>;
			Sleep:
				return O__M(self, 12);
			Smell:
				return O__M(self, 13);
			StandUp:
				if (IndirectlyContains(self, player))
					<<Exit self>>;
			Swing:
				<<JumpOver self>>;
		],
		after [
			obj i;
			Enter:
				if (self.state == 1) self.state = 2;
				return O__M(self, 6);
			Exit:
				return O__M(self, 7);
			!! Tras coger o colocar objetos en la cama se comprueba si encima
			!! suyo queda aún alguno no oculto (sin el atributo 'scenery' o
			!! 'concealed'). Si no los hay, se oculta la cama y sólo se
			!! referencia desde la descripción de la localidad. Si los hay, se
			!! desoculta (elimina el atributo 'concealed') para que la librería
			!! imprima el mensaje de 'describe':
			LetGo, Receive:
				objectloop(obj in self && obj ~= player
					&& obj hasnt scenery or concealed) i++;
				if (i == 0) give self concealed;
				else give self ~concealed;
		],
		reset [;
			self.state = 0;
		],
		state 0, !! 0:desecha; 1:hecha; 2:hecha, pero arrugada
 has	concealed female supporter;

Atrezzo	-> -> Sabanas "sábanas"
 with	name_f	'almohada' 'cubierta' 'manta' 'sabana',
		name_fp	'cubiertas' 'mantas' 'sabanas',
		name_m	'almohadon' 'cojin' 'edredon',
		gender	G_FEMENINO,
		adjectives 'arrugada' 'arrugadas' 'cama' 'deshecha' 'deshechas',
		before [;
			Examine:
				<<Examine Cama>>;
			!! Iron, Pull, Turn:
			!! 	<<Iron Cama>>;
			Search, LookUnder:
				return O__M(self, 1);
			Smell:
				<<Smell Cama>>;
		],
 has	female;

Furniture	-> MesitaNoche "mesita de noche"
 class	Receptacle
!! TODO - sinónimos
 with	name_f	'mesita',
		gender	G_FEMENINO,
		adjectives 'de' 'noche',
		description [;
			O__M(self, 1, (self has open));
			if (self has open) {
				if (child(self)) O__M(self, 3);
				else O__M(self, 2);
			}
			new_line;
			return true;
		],
		after [;
			Open:
				if (self.opened == false) {
					give Dormitorio general;
					self.opened = true;
					return O__M(self, 5);
				}
				return O__M(self, 4);
		],
 private
		opened false,
 has	concealed container female openable ~open;

Dinosaur	-> -> Ankylosaurus "ankylosaurus"
 with	name_m 'ankylosaurus' 'anquilosaurio' 'dinosaurio' 'juguete',
 has	male;

Item	-> -> CajaPreservativos "caja de preservativos"
 with	name_f	'caja' 'cajetilla',
		name_m	'condon' 'preservativo' 'profiláctico',
		name_mp	'condones' 'preservativos' 'profilácticos',
		gender	G_FEMENINO,
		description [; return O__M(self, 1); ],
 has	female;

Item	-> -> CajaTabaco "cajetilla de tabaco"
 with	name_f	'caja' 'cajetilla',
		name_m	'cigarrillo' 'cigarro' 'tabaco',
		name_mp	'cigarrillos' 'cigarros',
		gender	G_FEMENINO,
		description [; return O__M(self, 1); ],
 has	female;

Item	-> -> FrascosTinte "frascos de tinte"
 with	name_m	'frasco' 'tinte',
		name_mp	'frascos' 'tintes',
		gender	G_MASCULINO + G_PLURAL,
		description [; return O__M(self, 1); ],
 has	male pluralname;

Item	-> Espejo "espejo"
 with	name_f	'cara',
		name_m	'cristal' 'espejo' 'reflejo' 'rostro',
		gender	G_MASCULINO,
		description [;
			if (self hasnt described) O__M(self, 1);
			else O__M(self, 2);
			return O__M(self, 3);
		],
		react_before [;
			Examine:
				if (noun == player)
					<<Examine self>>;
		],
		before [;
			Consult:
				<<Examine self>>;
			Kiss:
				return O__M(self, 4);
		],
 has	concealed male static;

Item	-> Camisa "camisa"
 with	name_f	'camisa',
		gender G_FEMENINO,
		description [; return O__M(self, 1); ],
		after [;
			Take:
				give self moved;
				move self to ArmarioDormitorio;
				return O__M(self, 2);
		],
		reset [;
			move self to Dormitorio;
		],
 has	concealed female;

Furniture	-> ArmarioDormitorio "armario"
 with	name_m	'armario',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
		before [;
			Open:
				return O__M(self, 2);
		],
 has	concealed container male ~open openable;


!!==============================================================================
!!
!!	@HabitacionMultiusos
!!
!!------------------------------------------------------------------------------

Indoors	HabitacionMultiusos "Habitación multiusos"
 with	name_f	'estancia' 'habitacion',
		name_m	'cuarto',
		gender	G_FEMENINO,
		description [; return O__M(self, 1); ],
		s_to	Pasillo,
 has	female;

Atrezzo	-> BancoAbdominales "banco de abdominales"
 with	name_fp	'flexiones',
		name_m	'banco',
		name_mp	'abdominales',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
 has	male transparent;

Atrezzo	-> -> BancoAbdominalesCilindros "apoyos"
 with	name_f	'espuma' 'gomaespuma',
		name_m	'apoyo' 'cilindro' 'sujeccion',
		name_mp	'apoyos' 'cilindros' 'sujecciones',
		gender	G_MASCULINO + G_PLURAL,
		description [; return O__M(self, 1); ],
 has	male pluralname;

Atrezzo	-> BiciletaEstatica "bicicleta estática"
 with	name_f	'bicicleta' 'estatica',
		gender	G_FEMENINO,
		description [; return O__M(self, 1); ],
 has	female;

Atrezzo	-> Esterillas "esterillas"
 with	name_f	'estera' 'esterilla',
		name_fp	'esteras' 'esterillas',
		gender	G_FEMENINO + G_PLURAL,
		description [; return O__M(self, 1); ],
 has	female pluralname;

Atrezzo	-> Mancuernas "mancuernas"
 with	name_f	'mancuerna' 'pesa',
		name_fp	'mancuernas' 'pesas',
		gender	G_FEMENINO + G_PLURAL,
		description [; return O__M(self, 1); ],
 has	female pluralname;

Atrezzo	-> PelotaYoga "pelota de yoga"
 with	name_f	'pelota' 'yoga',
		gender	G_FEMENINO,
		description [;
			if (self hasnt described) return O__M(self, 1);
			else return O__M(self, 2);
		],
 has	female;


!!==============================================================================
!!
!!	@Pasillo
!!
!!------------------------------------------------------------------------------

Indoors	Pasillo "Pasillo de la segunda planta"
 with	name_f	'estancia' 'habitacion',
		name_m	'corredor' 'pasillo',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
		n_to	HabitacionMultiusos,
		e_to	[;
			if (self.temp == 0) {
				self.temp++;
				return O__M(self, 2);
			} else if (self.temp == 1) {
				self.temp++;
				O__M(self, 3);
				new_line;
				return Dormitorio;
			} else {
				return Dormitorio;
			}
		],
		s_to	Escalera,
		d_to	[; return self.s_to(); ],
		reset [;
			self.temp = 0;
		],
 private
		temp 0,
 has	male;

Atrezzo	-> Fotografias "fotografías"
 with	name_f	'foto' 'instantanea',
 		name_fp	'fotografias' 'instantaneas',
		name_m	'retrato',
		name_mp	'retratos',
		gender	G_FEMENINO + G_PLURAL,
		description [; return O__M(self, 1); ],
 has	female pluralname;

!!------------------------------------------------------------------------------

Item	Escalera "escalera"
 with	found_in Pasillo Recibidor,
		name_f	'escalera' 'escalinata',
		name_fp	'escaleras',
		name_m	'escalon' 'peldano',
		name_mp	'escalones' 'pendanos',
		gender	G_FEMENINO,
		adjectives 'madera',
		description [;
			if (location == Pasillo) return O__M(self, 1);
			else return O__M(self, 2);
		],
		before [;
			DefaultAction:
				if (location == Pasillo) print (parser) "baja por la escalera";
				else print (parser) "sube por la escalera";
				new_line;
				<<Enter self>>;
		],
		after [;
			if (Recibidor hasnt general) give Recibidor general;

		],
		door_dir [;
			if (location == Pasillo) return s_to;
			else return e_to;
		],
		door_to [;
			if (location == Pasillo) {
				O__M(self, 3);
				new_line;
				return Recibidor;
			} else {
				O__M(self, 4);
				new_line;
				return Pasillo;
			}
		],
 has	door female open ~openable scenery;


!!==============================================================================
!!
!!	@Patio
!!
!!------------------------------------------------------------------------------

Outdoors	Patio "Patio delantero"
 with	name_f	'entrada' 'terraza',
		name_m	'corral' 'patio',
		gender	G_MASCULINO,
		adjectives 'delantera' 'delantero',
		description [;
			O__M(self, 1);
			if (player in self) return O__M(self, 2);
			else return O__M(self, 3);
		],
		after [;
			Go:
				give PuertaDelantera ~open;
				self.in_destination = PuertaDelantera;
		],
		n_to [;
			if (PuertaDelantera hasnt open) give PuertaDelantera open;
			return PuertaDelantera;
		],
		in_to	[; <<Enter self.in_destination>>; ],
		in_destination PuertaDelantera,
		sea_volume 50,
 has	male;

!!------------------------------------------------------------------------------

Atrezzo	-> CaminoGrava "camino de grava"
 with	name_f	'carretera' 'grava' 'gravilla',
		name_m	'acceso' 'camino' 'grijillo' 'grijo',
		gender	G_FEMENINO,
		adjectives 'secundaria',
		description [; <<Look>>; ],
 has	female;

Atrezzo	-> Casa "casa"
 with	name_f	'casa' 'enredadera' 'fachada',
		name_fp	'enredaderas',
		name_m	'edificio' 'verdin',
		gender	G_FEMENINO,
		adjectives 'blanca' 'blanco' 'planta',
		description [; return O__M(self, 1); ],
		before [;
			Patio.in_destination = self;
			Enter:
				<<Go n_obj>>;
		],
 has	enterable female;

Atrezzo	-> Construcciones "construcciones"
 with	name_f	'construccion' 'cuadra',
		name_fp	'casas' 'construcciones' 'cuadras',
		gender	G_FEMENINO + G_PLURAL,
		description [; return O__M(self, 1); ],
 has	male pluralname;

Atrezzo	-> Bosques "bosques"
 with	name_m	'arbol' 'bosque' 'haya' 'hayedo' 'roble' 'robledal',
		name_mp	'arboles' 'bosques' 'hayedos' 'robledales',
		gender	G_MASCULINO + G_PLURAL,
		description [; return O__M(self, 1); ],
 has	male pluralname;

Atrezzo	-> MarPatio "mar"
 with	name_f	'espuma' 'ola',
		name_fp	'olas',
		name_m	'agua' 'atlantico' 'cantabrico' 'mar' 'oceano' 'oleaje',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
		react_before [;
			Listen:
				if (noun == nothing)
					<<Listen self>>;
		],
		before [;
			Listen:
				return O__M(self, 1);
		],
 has	male;

Atrezzo	-> Montannas "montañas"
 with	name_f	'colina' 'cordillera' 'elevacion' 'montana',
		name_fp	'colinas' 'elevaciones' 'montanas',
		gender	G_FEMENINO + G_PLURAL,
		description [; return O__M(self, 1); ],
 has	male pluralname;

Atrezzo	-> Prados "pastos"
 with	name_m	'pasto' 'prado',
		name_mp	'pastos' 'prados',
		gender	G_MASCULINO + G_PLURAL,
		adjectives 'verde' 'verdes',
		description [; return O__M(self, 1); ],
 has	male pluralname;

!!------------------------------------------------------------------------------

Item	-> Coche "coche"
 class	SmartEnterable
 with	name_m	'auto' 'automovil' 'coche' 'megan' 'megane' 'vehiculo',
		gender	G_MASCULINO,
		adjectives 'aparcado' 'granate',
		describe [;
			new_line;
			return O__M(self, 3);
		],
		description [;
			if (player in self) <<Look>>;
			if (self hasnt described) return O__M(self, 1);
			else return O__M(self, 2);
		],
		react_before [;
			if (self.SmartEnterable::react_before()) return true;
			Exit:
				if (player in self && noun == nothing) <<Exit self>>;
			Lock:
				if (noun == self && second == nothing
					&& IndirectlyContains(player, self.with_key))
					second = self.with_key;
			SwitchOnEngine:
				if (noun == nothing) <<SwitchOn self>>;
			Unlock:
				if (noun == self && second == nothing
					&& IndirectlyContains(player, self.with_key))
					second = self.with_key;
		],
		before [;
			Patio.in_destination = self;
			DefaultAction:
				if (player notin self) {
					print (parser) "entra en el coche";
					new_line;
					<<Enter self>>;
				}
				print (parser) "enciende el coche";
				new_line;
				<<SwitchOn self>>;
			Enter:
				if (player in self) return false;
				if (self hasnt open) <Open self>;
				if (self hasnt open) return true;
				else self.automatic_enter = true;
			Open:
				if (self has open) return false;
				if (self has locked) <<Unlock self>>;
			Unlock:
				if (self hasnt locked) return false;
				if (~~IndirectlyContains(player, self.with_key)) {
					if (self.tried_to_open) return O__M(self, 4);
					self.tried_to_open = true;
					O__M(self, 5);
					new_line;
					if (IndirectlyContains(Cocina, Bolso)
						&& Bolso hasnt moved) {
						return O__M(self, 6);
					}
					if (IndirectlyContains(player, Bolso)) {
						return O__M(self, 7);
					}
					return O__M(self, 8);
				}
			SwitchOn:
				if (player notin self) return false;
				FadeOutTrack(MUS_PRINCIPAL, 0, 100);
				O__M(BotonArranque, 5); ! FIXME
				new_line;
				HorizontalRule();
				PressAnyKey();
				new_line;
				print (header) "FIN";
				PressAnyKey();
				new_line;
				new_line;
				print (parser) "Pulsa una tecla para terminar";
				quit;
		],
		after [;
			Enter:
				move BotonArranque to self;
				give self ~open;
				if (self.automatic_enter) self.automatic_enter = false;
				else O__M(self, 11);
				new_line;
				<<Look>>;
			Exit:
				move BotonArranque to LIMBO;
				give self ~open;
				O__M(self, 12);
				new_line;
				<<Look>>;
			Lock:
				return O__M(self, 9);
			Unlock:
				give self open;
				return O__M(self, 10);
		],
		with_key Llaves,
 private
		automatic_enter false,
		tried_to_open false,
 has	container enterable lockable locked male ~open openable remarkable
		static;

Item	BotonArranque "botón de arranque" LIMBO
 with	name_m	'boton',
		gender	G_MASCULINO,
		adjectives 'arranque',
		describe [; new_line; return O__M(self, 2); ],
		description [; return O__M(self, 1); ],
		before [;
			Push:
				<<SwitchOn Coche>>;
		],
 has	male static;

!!------------------------------------------------------------------------------

Atrezzo	Cristalera "cristalera de colores"
 with	found_in Patio Recibidor,
		name_f	'cristalera',
		name_m	'panel',
		adjectives
			'coloreada' 'colores' 'policromada' 'policromado' 'tintada'
			'tintado' 'traslúcida' 'traslúcido',
		description [;
			if (location == Patio) return O__M(self, 1);
			O__M(self, 2);
			if (self hasnt described) O__M(self, 3);
			return O__M(self, 4);
		],
 has	female;

Item	PuertaDelantera "puerta de entrada"
 with	found_in Patio Recibidor,
		name_f	'entrada' 'puerta' 'salida',
		gender	G_FEMENINO,
		adjectives 'casa' 'delantera' 'principal',
		description [;
			if (location == Patio) return O__M(self, 1);
			return O__M(self, 2);
		],
		door_dir [;
			if (location == Patio) return n_to;
			return s_to;
		],
		door_to [
			obj i ks;
			obj = i = ks = 0;
			!! 1) Al entrar en la casa:
			if (location == Patio) return Recibidor;
			!! 2) Al salir de la casa. Si el abrigo no está en el perchero:
			if (Abrigo notin Perchero) {
				O__M(self, 3);
				new_line;
				return Patio;
			}
			!! 3) Al salir. Si Silvia no puede coger el abrigo porque ya está
			!! cargada con demasiadas cosas:
			!! FIXME - Modificar de forma que; si la capacidad total del PC
			!! está cubierta, y tiene el frasco de sales de colores en las
			!! manos, al intentar coger otro objeto el frasco se cae y se rompe
			objectloop(obj in player && obj hasnt worn) i++;
			if ((i + 1) > player.capacity) {
				O__M(self, 4);
				return true;
			}
			!! 4) Al salir. Silvia coge el abrigo del perchero automáticamente:
			ks = keep_silent;
			keep_silent = true;
			<Take Abrigo>;
			keep_silent = ks;
			O__M(self, 5);
			new_line;
			return Patio;
		],
		before [;
			Patio.in_destination = self;
			DefaultAction:
				if (self hasnt open) {
					print (parser) "abre puerta", "^";
					<<Open self>>;
				}
				print (parser) "ve a la puerta", "^";
				<<Go self>>;
			Pull:
				if (location == Patio) <<Close self>>;
				<<Open self>>;
			Push:
				if (location == Patio) <<Open self>>;
				<<Close self>>;
		],
 has	door female ~open openable remarkable scenery;


!!==============================================================================
!!
!!	@Recibidor
!!
!!------------------------------------------------------------------------------

Array colorFlags -> 2; ! hasta 8 flags
!!	<>	'general' se activa cuando Silvia regresa a la localidad después de
!!		haber estado ya en ella
Indoors	Recibidor "Recibidor"
 with	name_f	'antesala' 'estancia' 'habitacion',
		name_m	'hall' 'recibidor' 'vestibulo',
		gender	G_MASCULINO,
		description [;
			if (self hasnt visited) {
				O__M(Silvia, 3);
				new_line;
				O__M(self, 1);
				return true;
			}
			if (PuertaDelantera hasnt open) O__M(self, 2);
			else O__M(self, 3);
			if (self has general) {
				print " ";
				O__M(self, 4);
				if (child(Perchero) == false) O__M(self, 5);
				print ".";
			}
			new_line;
			return true;
		],
		after [;
			Go:
				if (self hasnt general)
					give self general;
		],
		print_random_colors [ num
			i;
			if (num < 1) num = 1;
			if (num > 7) num = 7;
			!! Imprime el listado aleatorio de colores:
			for (i = 1 : i <= num : i++) {
				print (string) self.get_random_color();
				if (i == (num-1)) print " y ";
				else if (i < num) print ", ";
			}
			!! Agota el resto de posibilidades para que el próximo listado de
			!! colores empiece desde cero:
			for (i = 0 : i < (7-num) : i++) self.get_random_color();
		],
		n_to Salon,
		s_to [;
			if (PuertaDelantera hasnt open) give PuertaDelantera open;
			return PuertaDelantera;
		],
		e_to Escalera,
		out_to [; return self.s_to(); ],
		u_to [; return self.e_to(); ],
 private
		get_random_color [;
			switch (Shuffle(7, colorFlags)) {
				1:	return "rojos";
				2:	return "naranjas";
				3:	return "amarillos";
				4:	return "verdes";
				5:	return "azules";
				6:	return "añiles";
				7:	return "violetas";
			}
		],
 has	male;

!!------------------------------------------------------------------------------

Item	-> Perchero "perchero alto"
 with	name_f	'percha',
		name_m	'perchero',
		gender	G_MASCULINO,
		adjectives 'alto',
		describe [
			obj i;
			if (child(self) == false) return true;
			objectloop(obj in self && obj hasnt concealed) i++;
			if (i == 0) return true;
			new_line;
			if (i == 1 && child(self) == Abrigo) return O__M(self, 4);
			if (i == 1) return O__M(self, 5);
			return O__M(self, 6);
		],
		description [
			obj i;
			O__M(self, 1);
			if (child(self) == false) ".";
			objectloop(obj in self && obj hasnt concealed) i++;
			if (i == 0) ".";
			if (i == 1) return O__M(self, 2);
			return O__M(self, 3);
		],
		react_before [;
!			Drop, Hang:
			Drop:
				if ((IndirectlyContains(player, noun))
					&& (noun has clothing)
					&& (noun hasnt worn)
					&& (second == nothing)) {
					<<PutOn noun self>>;
				}
		],
		before [;
			Pull, Push, PushDir, Take, Turn:
				return O__M(self, 7);
			Receive:
				if (noun hasnt clothing) {
					return O__M(self, 8, noun);
				}
		],
		after [;
			Receive:
				return O__M(self, 9, noun);
		],
 has	male supporter transparent;

Item	-> -> Abrigo "abrigo"
 class	Clothes,
 with	name_f	'pelliza',
		name_m	'abrigo' 'gaban' 'sobretodo',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
		before [;
			if (self.Clothes::before()) return true;
			Iron:
				return O__M(self, 2);
		],
		layers 2,
 has	clothing male;

Furniture	-> Comoda "cómoda"
 class	Receptacle
 with	name_f	'comoda',
		name_m	'mobiliario' 'mueble',
		gender	G_FEMENINO,
		adjectives 'madera',
		description [;
			O__M(self, 1);
			if (child(self)) O__M(self, 2);
			new_line;
			return true;
		],
		after [;
			if (Recibidor hasnt general) give Recibidor general;
		],
 has	concealed female supporter;

Item	-> -> Telefono "teléfono"
 with	name_m	'telf' 'tlf' 'telefono',
		gender	G_MASCULINO,
		adjectives 'anticuado' 'antiguo',
		description [; return O__M(self, 1); ],
		before [;
			DefaultAction:
				return false;
			Examine, Look, Search:
				return false;
			Call, Take:
				if (self.try_to_call) return O__M(self, 3);
				self.try_to_call = true;
				return O__M(self, 2);
		],
		after [;
			if (Recibidor hasnt general) give Recibidor general;
		],
		reset [;
			self.try_to_call = false;
		],
 private
		try_to_call false,
 has	male static;

Item	-> -> ContestadorAutomatico "contestador automático"
 with	name_m	'contestador' 'maquina',
		gender	G_MASCULINO,
		adjectives 'automatica' 'automatico',
		description [;
			O__M(self, 1);
			if (self.deleted_messages == 2) O__M(self, 2);
			else O__M(self, 3);
			return O__M(self, 4);
		],
		after [;
			if (Recibidor hasnt general) give Recibidor general;
		],
		reset [;
			self.deleted_messages = 0;
		],
		deleted_messages 0,
 has	male static transparent;

Item	-> -> -> ContestadorAutomaticoPlay "botón de PLAY"
 with	name_m	'boton' 'play' 'reproducir',
		gender	G_MASCULINO,
		before [;
			DefaultAction:
				print (parser) "pulsar botón de PLAY";
				new_line;
				<<Push self>>;
			Examine:
				<<Examine ContestadorAutomatico>>;
			Look:
				<<Look ContestadorAutomatico>>;
			Push:
				switch (ContestadorAutomatico.deleted_messages) {
					0:
						if (ContestadorAutomatico hasnt general) {
							give ContestadorAutomatico general;
							return O__M(ContestadorAutomatico, 7);
						} else {
							return O__M(ContestadorAutomatico, 8);
						}
					1:
						if (ContestadorAutomatico hasnt general) {
							give ContestadorAutomatico general;
							return O__M(ContestadorAutomatico, 9);
						} else {
							return O__M(ContestadorAutomatico, 10);
						}
					default:
						return O__M(ContestadorAutomatico, 5);
				}
			Search:
				<<Search Telefono>>;
		],
		after [;
			if (Recibidor hasnt general) give Recibidor general;
		],
 has	concealed male static;

Item	-> -> -> ContestadorAutomaticoDelete "botón de DELETE"
 with	name_m	'boton' 'borrar' 'borrado' 'delete',
		gender	G_MASCULINO,
		before [;
			DefaultAction:
				print (parser) "pulsar botón de DELETE";
				new_line;
				<<Push self>>;
			Examine:
				<<Examine ContestadorAutomatico>>;
			Look:
				<<Look ContestadorAutomatico>>;
			Push:
				if (ContestadorAutomatico.deleted_messages < 2) {
					ContestadorAutomatico.deleted_messages++;
					return O__M(ContestadorAutomatico, 6);
				} else {
					return O__M(ContestadorAutomatico, 5);
				}
			Search:
				<<Search Telefono>>;
		],
		after [;
			if (Recibidor hasnt general) give Recibidor general;
		],
 has	concealed male static;


!!==============================================================================
!!
!!	@Salon
!!
!!------------------------------------------------------------------------------

Indoors	Salon "Salón"
 with	name_f	'estancia' 'habitacion' 'sala',
		name_m	'comedor' 'salon',
		gender	G_MASCULINO,
		description [;
			return O__M(self, 1);
		],
		s_to	Recibidor,
		w_to	Cocina,
 has	male;

Atrezzo	-> Ventanales "ventanales"
 with	name_f	'ventana',
		name_fp	'ventanas',
		name_m	'ventanal',
		name_mp	'ventanales',
		gender	G_MASCULINO + G_PLURAL,
		description [; return O__M(self, 1); ],
 has	male pluralname;

Atrezzo	-> Estanterias "estanterías"
 with	name_f	'balda' 'estanteria' 'repisa',
		name_fp	'baldas' 'estanterias' 'repisas',
		name_m	'anaquel' 'estante' 'pluteo',
		name_mp	'anaqueles' 'estantes' 'pluteos',
		gender	G_FEMENINO + G_PLURAL,
		description [
			i obj;
			O__M(self, 1);
			objectloop(obj in self && obj hasnt scenery) {
				i++;
				give obj workflag;
			}
			if (i > 0) {
				O__M(self, 2);
				WriteListFrom(child(self),
					ENGLISH_BIT + PARTINV_BIT + WORKFLAG_BIT);
			}
			print ".";
			new_line;
			return true;
		],
 has	female pluralname supporter transparent;

Atrezzo	-> -> Libros "libros"
 with	name_m	'libro',
		name_mp	'libros',
		gender	G_MASCULINO + G_PLURAL,
		description [;
			if (self has described) return O__M(self, 1);
			else return O__M(self, 2);
		],
 has	male pluralname;

Item	-> -> FrascoSales "frasco de colores"
 with	name_m	'frasco' 'regalo',
		gender	G_MASCULINO,
		description [;
			return O__M(self, 1);
		],
 has	concealed male;

Dinosaur -> -> Stegosaurus "stegosaurus"
 with	name_m	'dinosaurio' 'estegosaurio' 'juguete' 'stegosaurus',
		gender	G_MASCULINO,
		discovered true,
 has	male;

!! Atrezzo	-> MuebleBar "mueblebar"
!!  with	name_f	'bar',
!! 		name_m	'mobiliario' 'mueble' 'mueblebar',
!! 		gender	G_MASCULINO,
!! 		description [; return O__M(self, 1); ],
!!  has	male ~open openable;

Furniture	-> Sofa "sofá"
 class	SmartEnterable
 with	name_f	'butaca',
		name_m	'asiento' 'butacon' 'sillon' 'sofa',
		gender	G_MASCULINO,
		description [;
			O__M(self, 1);
			if (self hasnt described) O__M(self, 2);
			return true;
		],
 has	concealed enterable male supporter transparent;

Furniture	-> Televisor "televisor"
 with	name_f	'tele' 'television' 'tv',
		name_m	'televisor',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
 has	concealed male;


!!==============================================================================
!!
!!	@Terraza
!!
!!------------------------------------------------------------------------------

Outdoors	Terraza "Terraza trasera"
 with	name_f	'terraza',
		name_m	'mirador' 'patio',
		gender	G_FEMENINO,
		adjectives 'trasera' 'trasero',
		description [; return O__M(self, 1); ],
		n_to	Sendero,
		s_to	Cocina,
		in_to	[; return self.s_to(); ],
		d_to	[; return self.n_to(); ],
 has	female;

!!------------------------------------------------------------------------------

Atrezzo	-> MarTerraza "mar"
 with	name_f	'espuma' 'ola',
		name_fp	'olas',
		name_m	'agua' 'atlantico' 'cantabrico' 'mar' 'oceano' 'oleaje',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
 has	male;

Furniture	-> Macetas "macetas"
 with	name_f	'jardinera' 'maceta',
		name_fp	'jardineras' 'macetas',
		name_m	'tiesto',
		name_mp	'tiestos',
		gender	G_FEMENINO + G_PLURAL,
		description [; return O__M(self, 1); ],
 has	container female pluralname ~openable open;

Dinosaur -> -> Triceratops "triceratops"
 with	name_m	'dinosaurio' 'juguete' 'triceratops',
		gender	G_MASCULINO,
		description [;
			O__M(self, 1);
			if (self hasnt described) O__M(self, 2);
			new_line;
			return true;
		],
 has	concealed male;

Dinosaur -> -> Tyrannosaurus "tyrannosaurus rex"
 with	name_m	'dinosaurio' 'juguete' 'rex' 'tiranosaurio' 'trex'
				'tyrannosaurus',
		gender	G_MASCULINO,
 has	concealed male;
