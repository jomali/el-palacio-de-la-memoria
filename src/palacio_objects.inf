

!!==============================================================================
!!
!!	EL PALACIO DE LA MEMORIA
!!	Definición de localidades y objetos
!!
!!==============================================================================
!!
!!	Archivo:		palacio_objects.inf
!!	Autor(es):		J. Francisco Martín <jfm.lisaso@gmail.com>
!!	Idioma:			ES (Español)
!!	Sistema:		Inform-INFSP 6
!!	Plataforma:		Máquina-Z/Glulx
!!	Versión:		0.0
!!	Fecha:			2018/03/04
!!
!!------------------------------------------------------------------------------
!!
!!	Este archivo forma parte del relato interactivo
!!	EL PALACIO DE LA MEMORIA.
!!
!!	EL PALACIO DE LA MEMORIA es software libre: usted puede
!!	redistribuirlo y/o modificarlo bajo los términos de la Licencia
!!	Pública General GNU publicada por la Fundación para el Software
!!	Libre, ya sea la versión 3 de la Licencia, o (a su elección)
!!	cualquier versión posterior.
!!
!!	EL PALACIO DE LA MEMORIA se distribuye con la esperanza de que sea
!!	útil, pero SIN GARANTÍA ALGUNA; ni siquiera la garantía implícita
!!	MERCANTIL o de APTITUD PARA UN PROPÓSITO DETERMINADO. Consulte los
!!	detalles de la Licencia Pública General GNU para más información.
!!
!!	Debería haber recibido una copia de la Licencia Pública General GNU
!!	junto a EL PALACIO DE LA MEMORIA. En caso contrario, consulte
!!	<http://www.gnu.org/licenses/>.
!!
!!	Copyright (c) 2018, J. Francisco Martín
!!
!!------------------------------------------------------------------------------
!!
!!	HISTORIAL DE VERSIONES
!!
!!	0.0: 2018/03/04	Inicio de desarrollo.
!!
!!------------------------------------------------------------------------------
!!
!!	TABLA DE CONTENIDOS
!!
!!	1)	Dungeon Master / Limbo
!!	2)	Baño
!!	3)	Cala de los cangrejos
!!	4)	Cocina
!!	5)	Dormitorio principal
!!	6)	Habitación multiusos
!!	7)	Pasillo de la segunda planta
!!	8)	Patio delantero
!!	9)	Recibidor
!!	10)	Salón
!!	11)	Taller
!!	12)	Terraza trasera
!!
!!------------------------------------------------------------------------------


!!==============================================================================
!!
!!	1)	Dungeon Master / Limbo
!!
!!------------------------------------------------------------------------------

Object	DungeonMaster "(Dungeon Master)"
 with	!!----------------------------------------------------------------------
		!! Al salir por la puerta delantera se intenta coger automáticamente
		!! el abrigo del perchero. Retorna un valor indicando el resultado de
		!! la operación.
		!!
		!!	@returns {integer} Código numérico:
		!!		1. si el abrigo no está en el perchero
		!!		2. si no lo puede coger por falta de espacio en el inventario
		!!		3. ídem, si tiene el frasco del día del padre
		!!		4. si se coge el abrigo del perchero automáticamente
		!!----------------------------------------------------------------------
		leave_house [
			obj i ks;
			!! 1)
			if (abrigo notin RecibidorPerchero) {
				return 1;
			}
			!! 2)
			objectloop(obj in player) i++;
			if ((i + 1) > player.capacity) {
				return 2;
			}
			!! 3)
			ks = keep_silent;
			keep_silent = true;
			<Take abrigo>;
			keep_silent = ks;
			return 3;
		],
		!!----------------------------------------------------------------------
		!! Se activa tras tomar inventario una vez con la ropa puesta.
		!!----------------------------------------------------------------------
		inventory_flag false,
;

Room	Limbo "En algún lugar"
 with	name_f	'babia',
		name_m	'limbo' 'lugar' 'sueno' 'vacio',
		gender	G_MASCULINO,
		description [;
			O__M(self, 1);
			if (self hasnt visited) O__M(self, 2);
			new_line;
			return true;
		],
		clarification 0,
 has	male;

NPC		-> Silvia "Silvia"
 with	name_f	'personaje' 'protagonista' 'silvia',
		gender	G_FEMENINO,
		adjectives 'principal',
		capacity MAX_CARRIED,
		description [; <<Inv>>; ],
 has	female proper;

Item	-> -> Ropa "ropa"
 with	name_f	'ropa',
		gender	G_FEMENINO,
		adjectives 'luto',
		article "su",
 has	clothing female worn;

Item	-> -> LlaveroPadre "llavero de su padre"
 with	name_f	'llave',
		name_fp	'llaves',
		name_m	'llavero',
		gender	G_MASCULINO,
		adjectives 'padre' 'su',
		article	"el",
		description [; return O__M(self, 1); ],
 has	male;


!!==============================================================================
!!
!!	2)	Baño
!!
!!------------------------------------------------------------------------------

Indoors	Banno "Baño"
 with	name_f	'estancia' 'habitacion',
		name_m	'aseo' 'bano',
		gender	G_FEMENINO,
 has	female;


!!==============================================================================
!!
!!	3)	Cala de los cangrejos
!!
!!------------------------------------------------------------------------------

Outdoors	Cala "Cala de los cangrejos"
 with	name_f	'abra' 'bahia' 'cala' 'caleta' 'costa' 'ensenada' 'orilla'
				'playa' 'rada',
		name_m	'ancon' 'grao' 'litoral',
		gender	G_FEMENINO,
		adjectives 'cangrejos',
 has	female;


!!==============================================================================
!!
!!	4)	Cocina
!!
!!------------------------------------------------------------------------------

Indoors	Cocina "cocina"
 with	name_f	'cocina' 'estancia' 'habitacion',
		gender	G_FEMENINO,
		description [;
			return O__M(self, 1);
		],
		e_to	Salon,
 has	female;

Atrezzo	-> CocinaEncimera "encimera"
 with	name_f	'encimera',
		name_m	'mobiliario' 'mueble',
		name_mp	'muebles',
		gender	G_FEMENINO,
		description [; return O__M(self, 1); ],
 has	female supporter transparent;

Furniture	-> CocinaFrigorifico "frigorífico"
 with	name_m	'electrodomestico' 'frigorifico' 'mobiliario' 'mueble',
		name_mp	'electrodomesticos' 'muebles',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
 has	concealed male;

Furniture	-> CocinaMesa "mesa"
 with	name_f	'mesa',
		name_m	'mobiliario' 'mueble',
		name_mp	'muebles',
		gender	G_FEMENINO,
		description [; return O__M(self, 1); ],
 has	female supporter transparent;

Item	-> -> Bolso "bolso"
 with	name_f	'bandolera' 'bolsa',
		name_m	'bolso',
		gender	G_MASCULINO,
		adjectives 'silvia' 'su',
		article "su",
		description [; return O__M(self, 1); ],
 has	container male open;

Item	-> -> -> LlaveroSilvia "llavero de silvia"
 with	name_f	'llave',
		name_fp	'llaves',
		name_m	'llavero',
		gender	G_MASCULINO,
		adjectives 'silvia' 'su',
		article	"el",
		description [; return O__M(self, 1); ],
 has	male;


!!==============================================================================
!!
!!	5)	Dormitorio principal
!!
!!------------------------------------------------------------------------------

Indoors	Dormitorio "Dormitorio principal"
 with	name_f	'estancia' 'habitacion',
		name_m	'cuarto' 'dormitorio',
		gender	G_MASCULINO,
		adjectives 'principal',
 has	male;

Furniture	-> DormitorioCama "cama"
 with	name_f	'cama',
		name_m	'mobiliario' 'mueble',
		gender	G_FEMENINO,
		description [; return O__M(self, 1); ],
 has	enterable female supporter transparent;


!!==============================================================================
!!
!!	6)	Habitación multiusos
!!
!!------------------------------------------------------------------------------

Indoors	Habitacion "Habitación multiusos"
 with	name_f	'estancia' 'habitacion',
		name_m	'cuarto',
		gender	G_FEMENINO,
 has	female;


!!==============================================================================
!!
!!	7)	Pasillo de la segunda planta
!!
!!------------------------------------------------------------------------------

Indoors	Pasillo "Pasillo de la segunda planta"
 with	name_f	'estancia' 'habitacion',
		name_m	'corredor' 'pasillo',
		gender	G_MASCULINO,
 has	male;

Atrezzo	-> PasilloFotografias "fotografías"
 with	name_f	'foto' 'fotografias',
		gender	G_FEMENINO + G_PLURAL,
		description [; return O__M(self, 1); ],
 has	female pluralname;


!!==============================================================================
!!
!!	8)	Patio delantero
!!
!!------------------------------------------------------------------------------

Outdoors	Patio "Patio delantero"
 with	name_f	'entrada' 'terraza',
		name_m	'corral' 'patio',
		gender	G_MASCULINO,
		adjectives 'delantera' 'delantero',
		description [;
			if (player in self) return O__M(self, 1);
			else return O__M(self, 2);
		],
		n_to	PuertaDelantera,
		in_to	[; return self.n_to(); ],
 has	male;

Atrezzo	-> PatioCasa "casa"
 with	name_f	'casa' 'enredadera' 'fachada',
		name_fp	'enredaderas',
		name_m	'edificio' 'verdin',
		gender	G_FEMENINO,
		adjectives 'blanca' 'blanco' 'planta',
		description [; return O__M(self, 1); ],
		before [;
			Enter:
				<<Go n_obj>>;
		],
 has	enterable female;

Atrezzo	-> PatioCamino "camino de grava"
 with	name_f	'carretera' 'grava' 'gravilla',
		name_m	'acceso' 'camino',
		gender	G_FEMENINO,
		adjectives 'secundaria',
		description [; return O__M(self, 1); ],
 has	female;

Item	-> PatioCoche "coche"
 with	name_m	'coche' 'vehiculo',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
		before [;
			DefaultAction:
				if (player notin self) {
					print (parser) "entra en el coche", "^";
					<<Enter self>>;
				}
				print (parser) "enciende el coche", "^";
				<<SwitchOn self>>;
			SwitchOn:
				if (player notin self) return false;
				O__M(self, 4);
				PressAnyKey();
				new_line;
				print (header) "FIN";
				PressAnyKey();
				new_line;
				new_line;
				print (parser) "Pulsa una tecla para terminar";
				quit;
		],
 has	concealed container enterable male ~open openable static switchable;

Item	PuertaDelantera "puerta de entrada"
 with	found_in Patio Recibidor,
		name_f	'entrada' 'puerta' 'salida',
		gender	G_FEMENINO,
		adjectives 'delantera' 'principal',
		desription [;
			if (location == Patio) return O__M(self, 1);
			return O__M(self, 2);
		],
		door_dir [;
			if (location == Patio) return n_to;
			return s_to;
		],
		door_to [;
			if (location == Patio) return Recibidor;
			switch (DungeonMaster.leave_house()) {
				1:	! El abrigo no está en el perchero
					O__M(self, 3);
					new_line;
				2:	! Silvia no puede coger el abrigo porque ya está cargada
					! con demasiadas cosas
					! FIXME - Modificar de forma que; si la capacidad total del
					! PC está cubierta, y tiene el frasco de sales de colores
					! en las manos, al intentar coger otro objeto el frasco se
					! cae y se rompe
					O__M(self, 4);
					return true;
				3:	! Silvia coge el abrigo del perchero y sale
					O__M(self, 5);
					new_line;
			}
			return patio;
		],
		before [;
			DefaultAction:
				if (self hasnt open) {
					print (parser) "abre puerta", "^";
					<<Open self>>;
				}
				print (parser) "ve a la puerta", "^";
				<<Go self>>;
			Pull:
				if (location == Patio) <<Close self>>;
				<<Open self>>;
			Push:
				if (location == Patio) <<Open self>>;
				<<Close self>>;
		],
 has	door female ~open openable remarkable scenery;

Atrezzo	Cristalera "cristalera de colores"
 with	found_in Patio Recibidor,
		name_f	'cristalera',
		name_m	'panel',
		adjectives
			'coloreada' 'colores' 'policromada' 'policromado' 'tintada'
			'tintado' 'traslúcida' 'traslúcido',
		description [;
			if (location == Patio) return O__M(self, 1);
			return O__M(self, 2);
		],
 has	female;


!!==============================================================================
!!
!!	9)	Recibidor
!!
!!------------------------------------------------------------------------------

!!	-	'general' se activa tras abandonar la localidad por primera vez
Indoors	Recibidor "Recibidor"
 with	name_f	'antesala' 'estancia' 'habitacion',
		name_m	'hall' 'recibidor' 'vestibulo',
		gender	G_MASCULINO,
		description [;
			if (self hasnt visited) {
				O__M(DungeonMaster, 4);
				new_line;
				return O__M(self, 1);
			}
			if (PuertaDelantera hasnt open) O__M(self, 2);
			else O__M(self, 3);
			if (self has general) {
				print " ";
				O__M(self, 4);
				if (child(RecibidorPerchero) == false) O__M(self, 5);
				print ".";
			}
			new_line;
			return true;
		],
		after [;
			Go:
				if (self hasnt general)
					give self general;
		],
		n_to	Salon,
		s_to	PuertaDelantera,
		out_to	[; return self.s_to(); ],
 has	male;

Item	-> RecibidorPerchero "perchero alto"
 with	name_f	'percha',
		name_m	'perchero',
		gender	G_MASCULINO,
		adjectives 'alto',
		describe [
			obj i;
			if (child(self) == false) return true;
			objectloop(obj in self && obj hasnt concealed) i++;
			if (i == 0) return true;
			new_line;
			if (i == 1 && child(self) == abrigo) return O__M(self, 4);
			if (i == 1) return O__M(self, 5);
			return O__M(self, 6);
		],
		description [
			obj i;
			O__M(self, 1);
			if (child(self) == false) ".";
			objectloop(obj in self && obj hasnt concealed) i++;
			if (i == 0) ".";
			if (i == 1) return O__M(self, 2);
			return O__M(self, 3);
		],
		react_before [;
			Drop:
				if ((IndirectlyContains(player, noun))
					&& (noun has clothing)
					&& (noun hasnt worn)
					&& (second == nothing)) {
					<<PutOn noun self>>;
				}
		],
		before [;
			Pull, Push, PushDir, Take, Turn:
				return O__M(self, 7);
			Receive:
				if (noun hasnt clothing) {
					return O__M(self, 8, noun);
				}
		],
		after [;
			Receive:
				return O__M(self, 9, noun);
		],
 has	male supporter transparent;

Item	-> -> Abrigo "abrigo"
 with	name_m	'abrigo',
		gender	G_MASCULINO,
 has	clothing male;

Furniture	-> RecibidorComoda "cómoda"
 with	name_f	'comoda',
		name_m	'mobiliario' 'mueble',
		gender	G_FEMENINO,
		adjectives 'madera',
		description [; return O__M(self, 1); ],
 has	concealed female;


!!==============================================================================
!!
!!	10)	Salón
!!
!!------------------------------------------------------------------------------

Indoors	Salon "Salón"
 with	name_f	'estancia' 'habitacion' 'sala',
		name_m	'comedor' 'salon',
		gender	G_MASCULINO,
		description [;
			return O__M(self, 1);
		],
		s_to	Recibidor,
		w_to	Cocina,
 has	male;

Atrezzo	-> SalonVentanales "ventanales"
 with	name_f	'ventana',
		name_fp	'ventanas',
		name_m	'ventanal',
		name_mp	'ventanales',
		gender	G_MASCULINO + G_PLURAL,
		description [; return O__M(self, 1); ],
 has	male pluralname;

Atrezzo	-> SalonEstanterias "estanterías"
 with	name_f	'estanteria',
		name_fp	'estanterias',
		name_m	'estante',
		name_mp	'estantes',
		gender	G_FEMENINO + G_PLURAL,
		description [; return O__M(self, 1); ],
 has	female pluralname supporter transparent;

Atrezzo	-> -> SalonLibros "libros"
 with	name_m	'libro',
		name_mp	'libros',
		gender	G_MASCULINO + G_PLURAL,
		description [; return O__M(self, 1); ],
 has	male pluralname;

Item	-> -> Frasco "adorno"
 with	name_m	'adorno' 'frasco',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
 has	concealed male;

Atrezzo	-> SalonMuebleBar "mueblebar"
 with	name_f	'bar',
		name_m	'mobiliario' 'mueble' 'mueblebar',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
 has	male ~open openable;

Furniture	-> SalonSofa "sofá"
 with	name_m	'sofa',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
 has	concealed enterable male supporter transparent;

Furniture	-> SalonTelevisor "televisor"
 with	name_f	'television',
		name_m	'televisor',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
 has	concealed male;


!!==============================================================================
!!
!!	11)	Taller
!!
!!------------------------------------------------------------------------------

Indoors	Taller "Taller"
 with	name_m	'cuarto' 'taller',
		gender	G_MASCULINO,
 has	male;


!!==============================================================================
!!
!!	12)	Terraza trasera
!!
!!------------------------------------------------------------------------------

Outdoors	Terraza "Terraza trasera"
 with	name_f	'terraza',
		name_m	'mirador' 'patio',
		gender	G_FEMENINO,
		adjectives 'trasera' 'trasero',
 has	female;
