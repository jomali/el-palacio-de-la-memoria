

!!==============================================================================
!!
!!	EL PALACIO DE LA MEMORIA
!!	Definición de localidades y objetos
!!
!!==============================================================================
!!
!!	Archivo:		palacio_objects.inf
!!	Autor(es):		J. Francisco Martín <jfm.lisaso@gmail.com>
!!	Idioma:			ES (Español)
!!	Sistema:		Inform-INFSP 6
!!	Plataforma:		Máquina-Z/Glulx
!!	Versión:		0.0
!!	Fecha:			2018/06/11
!!
!!------------------------------------------------------------------------------
!!
!!	Este archivo forma parte de la ficción interactiva
!!	EL PALACIO DE LA MEMORIA.
!!
!!	EL PALACIO DE LA MEMORIA es software libre: usted puede
!!	redistribuirlo y/o modificarlo bajo los términos de la Licencia
!!	Pública General GNU publicada por la Fundación para el Software
!!	Libre, ya sea la versión 3 de la Licencia, o (a su elección)
!!	cualquier versión posterior.
!!
!!	EL PALACIO DE LA MEMORIA se distribuye con la esperanza de que sea
!!	útil, pero SIN GARANTÍA ALGUNA; ni siquiera la garantía implícita
!!	MERCANTIL o de APTITUD PARA UN PROPÓSITO DETERMINADO. Consulte los
!!	detalles de la Licencia Pública General GNU para más información.
!!
!!	Debería haber recibido una copia de la Licencia Pública General GNU
!!	junto a EL PALACIO DE LA MEMORIA. En caso contrario, consulte
!!	<http://www.gnu.org/licenses/>.
!!
!!	Copyright (c) 2018, J. Francisco Martín
!!
!!------------------------------------------------------------------------------
!!
!!	TABLA DE CONTENIDOS
!!
!!	1)	Limbo
!!	2)	Baño
!!	3)	Cala de los cangrejos
!!	4)	Cocina
!!	5)	Dormitorio principal
!!	6)	Habitación multiusos
!!	7)	Pasillo de la segunda planta
!!	8)	Patio delantero
!!	9)	Recibidor
!!	10)	Salón
!!	11)	Taller
!!	12)	Terraza trasera
!!
!!------------------------------------------------------------------------------


!!==============================================================================
!!
!!	1)	Limbo
!!
!!------------------------------------------------------------------------------

Room	Limbo "En algún lugar"
 with	name_f	'babia',
		name_m	'limbo' 'lugar' 'sueno' 'vacio',
		gender	G_MASCULINO,
		description [;
			O__M(self, 1);
			if (self hasnt visited) O__M(self, 2);
			new_line;
			return true;
		],
		clarification 0,
 has	male;

NPC		-> Silvia "Silvia"
 with	name_f	'personaje' 'protagonista' 'silvia',
		gender	G_FEMENINO,
		adjectives 'principal',
		capacity MAX_CARRIED,
		description [; <<Inv>>; ],
		inventory_flag false,
 has	female proper;

Item	-> -> Ropa "ropa"
 class	Clothes,
 with	name_f	'falda' 'ropa',
		name_fp	'medias',
		name_m	'vestido' 'zapato',
		name_mp	'zapatos',
		gender	G_FEMENINO,
		adjectives 'luto' 'negra' 'negras' 'negro' 'negros',
		article "su",
		before [
			obj;
			self.Clothes::before();
			DefaultAction, Examine, Search:
				obj = parent(Ropa);
				!! 1) Silvia tiene la ropa puesta:
				if (obj == player && Ropa has worn) <<Inv>>;
				!! 2) la ropa está tirada en el suelo de la localidad actual:
				else if (obj == real_location) return O__M(self, 1, obj);
				!! 3) la ropa está en el perchero del recibidor:
				else if (obj == RecibidorPerchero) return O__M(self, 4, obj);
				!! 4) la ropa está dentro de un contenedor:
				else if (obj has container) return O__M(self, 2, obj);
				!! 5) por defecto, cuando la ropa está en un objeto cualquiera:
				else return O__M(self, 3, obj);
		],
		after [;
			Disrobe:
				!! 1) el PC se desnuda y deja la ropa en el perchero
				if (real_location == Recibidor) {
					move self to RecibidorPerchero;
					return O__M(self, 7, RecibidorPerchero);
				}
				!! 2) el PC se desnuda y deja la ropa en el suelo
				move self to real_location;
				return O__M(self, 6);
			Take:
				<<Wear self>>;
		],
		level 0,
 has	clothing female worn;

Atrezzo Cielo "cielo"
 with	found_in [; if (location ofclass Outdoors) return true; ],
		name_f	'nube',
		name_fp	'nubes',
		name_m	'cielo' 'firmamento' 'sol',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
 has	male;


!!==============================================================================
!!
!!	2)	Baño
!!
!!------------------------------------------------------------------------------

Indoors	Banno "Baño"
 with	name_f	'estancia' 'habitacion',
		name_m	'aseo' 'bano',
		gender	G_FEMENINO,
 has	female;


!!==============================================================================
!!
!!	3)	Cala de los cangrejos
!!
!!------------------------------------------------------------------------------

Outdoors	Cala "Cala de los cangrejos"
 with	name_f	'abra' 'bahia' 'cala' 'caleta' 'costa' 'ensenada' 'orilla'
				'playa' 'rada',
		name_m	'ancon' 'grao' 'litoral',
		gender	G_FEMENINO,
		adjectives 'cangrejos',
 has	female;


!!==============================================================================
!!
!!	4)	Cocina
!!
!!------------------------------------------------------------------------------

Indoors	Cocina "cocina"
 with	name_f	'cocina' 'estancia' 'habitacion',
		gender	G_FEMENINO,
		description [
			i j obj;
			O__M(self, 1);
			new_line;
			objectloop(obj in Encimera && obj hasnt concealed) i++;
			objectloop(obj in MesaCocina && obj hasnt concealed) j++;
			if (i > 0) {
				O__M(self, 2, Encimera);
				if (j > 0) O__M(self, 3, MesaCocina);
				return O__M(self, 4);
			}
			if (j > 0) {
				O__M(self, 2, MesaCocina);
				return O__M(self, 4);
			}
		],
		e_to	Salon,
 has	female;

Atrezzo	-> Armario "armario"
 with	name_m	'armario' 'mobiliario' 'mueble',
		name_mp	'muebles',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
 has	concealed female;

Atrezzo	-> Frigorifico "frigorífico"
 with	name_m	'electrodomestico' 'frigorifico' 'mobiliario' 'mueble',
		name_mp	'electrodomesticos' 'muebles',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
 has	concealed male;

Atrezzo	-> HornoLena "horno de leña"
 with	name_m	'horno',
		gender	G_MASCULINO,
		adjectives 'forja' 'hierro' 'lena',
		description [;
			O__M(self, 1);
			if (self hasnt described) O__M(self, 2);
			new_line;
			return true;
		],
 has	male;

Item	-> Encimera "encimera"
 with	name_f	'encimera',
		name_m	'mobiliario' 'muebles',
		name_mp	'muebles',
		gender	G_FEMENINO,
		description [
			i obj;
			i = obj = 0;
			objectloop(obj in self && obj hasnt concealed) i++;
			if (i == 0) return O__M(self, 1);
			else return O__M(self, 2);
		],
		before [;
			DefaultAction, Examine, LetGo, Receive, Search:
				return false;
			default:
				print "No es necesario que se preocupe por ";
				SpanishNominativePronoun(self);
				".";
		],
 has	concealed female scenery supporter transparent;

Atrezzo	-> -> Cafetera "cafetera de cápsulas"
 with	name_f	'cafetera',
		gender	G_FEMENINO,
		adjectives 'capsulas',
		description [; return O__M(self, 1); ],
 has	female;

Atrezzo	-> -> Radiocasete "radiocasete"
 with	name_f	'radio',
		name_m	'radiocasete',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
 has	male;

Furniture	-> MesaCocina "mesa"
 with	name_f	'mesa' 'silla',
		name_fp	'sillas',
		name_m	'mobiliario' 'mueble',
		name_mp	'muebles',
		gender	G_FEMENINO,
		description [; return O__M(self, 1); ],
 has	concealed female supporter transparent;

Item	-> -> Bolso "bolso"
 class	Clothes,
 with	name_f	'bandolera' 'bolsa',
		name_m	'bolso',
		gender	G_MASCULINO,
		adjectives 'silvia' 'su',
		article "su",
		description [
			i obj;
			i = obj = 0;
			objectloop(obj in self && obj hasnt concealed) i++;
			O__M(self, 1);
			if (i > 0) O__M(self, 2);
			new_line;
			return true;
		],
		before [;
			self.Clothes::before();
		],
		after [
			i obj;
			LetGo, Receive:
				i = obj = 0;
				objectloop(obj in self && obj has remarkable) i++;
				if (i > 0) give self remarkable;
				else give self ~remarkable;
			Take:
				if (parent(self) has supporter) return O__M(self, 3);
				if (parent(self) has container) return O__M(Self, 4);
		],
		level 2,
 has	container male open remarkable;

Item	-> -> -> Llaves "llaves"
 with	name_f	'llave' 'muñeca' 'muñequita' 'sally',
		name_fp	'llaves',
		name_m	'llavero' 'muñeco' 'muñequito',
		gender	G_FEMENINO + G_PLURAL,
		adjectives 'silvia' 'su',
		article	"sus",
		description [;
			O__M(self, 1);
			if (self hasnt described) { new_line; O__M(self, 2); }
			return true;
		],
 has	female pluralname remarkable;


!!==============================================================================
!!
!!	5)	Dormitorio principal
!!
!!------------------------------------------------------------------------------

Indoors	Dormitorio "Dormitorio principal"
 with	name_f	'estancia' 'habitacion',
		name_m	'cuarto' 'dormitorio',
		gender	G_MASCULINO,
		adjectives 'principal',
 has	male;

!!	-	'general' se activa para evitar las comprobaciones de 'react_before'
Atrezzo	-> Oscuridad "oscuridad"
 with	name_f	'lobreguez' 'negrura' 'oscuridad' 'penumbra' 'tenebrosidad',
		name_fp	'penumbras' 'sombras' 'tinieblas',
		gender	G_FEMENINO,
		article	"la",
		description [; <<Look>>; ],
		react_before [;
			if (self has general) return false;
			Blow, Listen, Rub, SetTo, Smell, Taste, Touch:
				if (self has general) return false;
				if (noun == nothing or player or self)
					return false;
				if (IndirectlyContains(player, noun))
					return false;
				if (noun == self.exception)
					return false;
				return self.cannot_find_object(noun);
			Close:
				if (noun hasnt openable)
					return false;
				if (noun == self.exception)
					return false;
				return self.cannot_find_object(noun);
			Consult, Examine, Look, LookUnder, Read, Search:
				if (noun == nothing or player or self)
					return false;
				if (noun == location or real_location)
					return false;
				if (noun == self.exception)
					return false;
				return self.cannot_see_object(noun);
			Dance:
				return O__M(self, 1);
			Empty, EmptyT, Insert, PutOn, Remove, Transfer:
				if (noun hasnt supporter or container)
					return false;
				if (IndirectlyContains(player, noun))
					return false;
				if (second ~= nothing && IndirectlyContains(player, second))
					return false;
				return self.cannot_find_object(noun);
			Jump, JumpOver:
				return O__M(self, 2);
			Lock, Unlock:
				if (noun hasnt lockable)
					return false;
				if (IndirectlyContains(player, noun))
					return false;
				return self.cannot_find_object(noun);
			Open:
				if (noun hasnt openable)
					return false;
				if (noun == self.exception)
					return false;
				return self.cannot_find_object(noun);
			Pull, Push, PushDir, Take:
				if (noun has scenery or static)
					return false;
				if (noun == nothing or player)
					return false;
				if (IndirectlyContains(player, noun))
					return false;
				if (noun == self.exception)
					return false;
				return self.cannot_find_object(noun);
			Swing:
				return self.not_a_good_idea("columpiándose");
			Wear:
				if (noun hasnt clothing) return false;
				return self.cannot_find_object(noun);
		],
		exception Cortinas,
 private
		cannot_see_object [ obj;
		],
		cannot_find_object [ obj;
		],
		not_a_good_idea [ action_text;
		],
 has	female;

Atrezzo	-> Cortinas "cortinas"
 with	name_f	'colgadura' 'cortina' 'persiana' 'ventana',
		name_fp	'colgaduras' 'cortinas' 'persianas',
		name_m	'cortinaje' 'ventanal' 'visillo',
		name_mp	'cortinajes' 'visillos',
		gender	G_FEMENINO + G_PLURAL,
		adjectives
			'abierta' 'abiertas' 'abierto' 'abiertos' 'cerrada' 'cerradas'
			'cerrado' 'cerrados' 'tela',
		description [;
			if (self has open) return O__M(self, 2);
			else return O__M(self, 1);
		],
		after [;
			Close:
				O__M(self, 3);
				<<Look>>;
			Open:
				O__M(self, 4);
				<<Look>>;
		],
 has	female openable pluralname;

Furniture	-> Cama "cama"
 class	SmartEnterable
 with	name_f	'cama' 'piltra',
		name_m	'camastro' 'catre' 'colchon' 'jergon' 'lecho' 'mobiliario'
				'mueble' 'somier',
		name_mp	'muebles',
		gender	G_FEMENINO,
		!! 'clarification' define el mensaje personalizado que se imprime junto
		!! al título de la localidad cuando el PJ se encuentra en un objeto
		clarification "sentada en la cama",
		description [;
			switch (self.wrinkled_sheets) {
				0:	return O__M(self, 1);
				1:	return O__M(self, 3);
				2:	return O__M(self, 2);
			}
		],
		react_before [;
			if (self.SmartEnterable::react_before()) return true;
			Sleep:
				if (noun == nothing) <<Sleep self>>;
			StandUp:
				if (noun == nothing && player in self) <<Exit self>>;
			Swing:
				if (noun == nothing && player in self) <<JumpOver self>>;
		],
		before [;
			Climb:
				<<Enter self>>;
			Enter:
				if (player in self) return O__M(self, 8);
				return false;
			!! Iron:
			!! 	if (self.wrinkled_sheets == 2) return O__M(self, 4);
			!! 	else {
			!! 		self.wrinkled_sheets = 2;
			!! 		return O__M(self, 5);
			!! 	}
			Jump, JumpOver:
				return O__M(self, 6);
			LookUnder:
				return O__M(self, 7);
			Sit:
				<<Enter self>>;
			Sleep:
				return O__M(self, 11);
			Smell:
				return O__M(self, 12);
			StandUp:
				if (player in self) <<Exit self>>;
		],
		after [;
			Enter:
				if (self.wrinkled_sheets == 2) self.wrinkled_sheets = 1;
				return O__M(self, 9);
			Exit:
				return O__M(self, 10);
		],
 private
		wrinkled_sheets 0, ! 0 - deshecho; 1 - arrugadas; 2 - estiradas
 has	enterable female supporter transparent;

Atrezzo	-> -> Sabanas "sábanas"
 with	name_f	'almohada' 'manta' 'sabana',
		name_fp	'mantas' 'sabanas',
		name_m	'almohadon' 'cojin' 'edredon',
		gender	G_FEMENINO,
		adjectives 'arrugada' 'arrugadas' 'cama' 'deshecha' 'deshechas',
		before [;
			Examine:
				<<Examine Cama>>;
			!! Iron, Pull, Turn:
			!! 	<<Iron Cama>>;
			Search, LookUnder:
				return O__M(self, 1);
			Smell:
				<<Smell Cama>>;
		],
 has	female;


!!==============================================================================
!!
!!	6)	Habitación multiusos
!!
!!------------------------------------------------------------------------------

Indoors	Habitacion "Habitación multiusos"
 with	name_f	'estancia' 'habitacion',
		name_m	'cuarto',
		gender	G_FEMENINO,
 has	female;


!!==============================================================================
!!
!!	7)	Pasillo de la segunda planta
!!
!!------------------------------------------------------------------------------

Indoors	Pasillo "Pasillo de la segunda planta"
 with	name_f	'estancia' 'habitacion',
		name_m	'corredor' 'pasillo',
		gender	G_MASCULINO,
 has	male;

Atrezzo	-> PasilloFotografias "fotografías"
 with	name_f	'foto' 'fotografias',
		gender	G_FEMENINO + G_PLURAL,
		description [; return O__M(self, 1); ],
 has	female pluralname;


!!==============================================================================
!!
!!	8)	Patio delantero
!!
!!------------------------------------------------------------------------------

Outdoors	Patio "Patio delantero"
 with	name_f	'entrada' 'terraza',
		name_m	'corral' 'patio',
		gender	G_MASCULINO,
		adjectives 'delantera' 'delantero',
		description [;
			O__M(self, 1);
			if (player in self) return O__M(self, 2);
			else return O__M(self, 3);
		],
		after [;
			Go:
				give PuertaDelantera ~open;
				self.in_destination = PuertaDelantera;
		],
		n_to [;
			if (PuertaDelantera hasnt open) give PuertaDelantera open;
			return PuertaDelantera;
		],
		in_to	[; <<Enter self.in_destination>>; ],
		in_destination PuertaDelantera,
 has	male;

Atrezzo	-> Casa "casa"
 with	name_f	'casa' 'enredadera' 'fachada',
		name_fp	'enredaderas',
		name_m	'edificio' 'verdin',
		gender	G_FEMENINO,
		adjectives 'blanca' 'blanco' 'planta',
		description [; return O__M(self, 1); ],
		before [;
			Patio.in_destination = self;
			Enter:
				<<Go n_obj>>;
		],
 has	enterable female;

Atrezzo	-> CaminoGrava "camino de grava"
 with	name_f	'carretera' 'grava' 'gravilla',
		name_m	'acceso' 'camino',
		gender	G_FEMENINO,
		adjectives 'secundaria',
		description [; <<Look>>; ],
 has	female;

Item	-> Coche "coche"
 class	SmartEnterable
 with	name_m	'coche' 'vehiculo',
		gender	G_MASCULINO,
		adjectives 'aparcado' 'granate',
		description [;
			if (player in self) <<Look>>;
			if (self hasnt described) return O__M(self, 1);
			else return O__M(self, 2);
		],
		react_before [;
			if (self.SmartEnterable::react_before()) return true;
			Exit:
				if (player in self && noun == nothing) <<Exit self>>;
			Lock:
				if (noun == self && second == nothing
					&& IndirectlyContains(player, self.with_key))
					second = self.with_key;
			SwitchOnEngine:
				if (noun == nothing) <<SwitchOn self>>;
			Unlock:
				if (noun == self && second == nothing
					&& IndirectlyContains(player, self.with_key))
					second = self.with_key;
		],
		before [;
			Patio.in_destination = self;
			DefaultAction:
				if (player notin self) {
					print (parser) "entra en el coche", "^";
					<<Enter self>>;
				}
				print (parser) "enciende el coche", "^";
				<<SwitchOn self>>;
			Enter:
				if (player in self) return false;
				if (self hasnt open) <Open self>;
				if (self hasnt open) return true;
				else self.automatic_enter = true;
			Open:
				if (self has open) return false;
				if (self has locked) <<Unlock self>>;
			Unlock:
				if (self hasnt locked) return false;
				if (~~IndirectlyContains(player, self.with_key)) {
					if (self.tried_to_open) return O__M(self, 3);
					self.tried_to_open = true;
					O__M(self, 4);
					new_line;
					if (IndirectlyContains(Cocina, Bolso)
						&& Bolso hasnt moved) {
						return O__M(self, 5);
					}
					if (IndirectlyContains(player, Bolso)) {
						return O__M(self, 6);
					}
					return O__M(self, 7);
				}
			SwitchOn:
				if (player notin self) return false;
				FadeOutTrack(MUS_PRESENTE, 0, 100);
				O__M(BotonArranque, 5); ! FIXME
				new_line;
				HorizontalRule();
				PressAnyKey();
				new_line;
				print (header) "FIN";
				PressAnyKey();
				new_line;
				new_line;
				print (parser) "Pulsa una tecla para terminar";
				quit;
		],
		after [;
			Enter:
				move BotonArranque to self;
				give self ~open;
				if (self.automatic_enter) self.automatic_enter = false;
				else O__M(self, 10);
				new_line;
				<<Look>>;
			Exit:
				move BotonArranque to LIMBO;
				give self ~open;
				O__M(self, 11);
				new_line;
				<<Look>>;
			Lock:
				return O__M(self, 8);
			Unlock:
				give self open;
				return O__M(self, 9);
		],
		with_key Llaves,
 private
		automatic_enter false,
		tried_to_open false,
 has	concealed container enterable lockable locked male ~open openable
		remarkable static transparent;

Item	BotonArranque "botón de arranque" LIMBO
 with	name_m	'boton',
		gender	G_MASCULINO,
		adjectives 'arranque',
		describe [; new_line; return O__M(self, 2); ],
		description [; return O__M(self, 1); ],
		before [;
			Push:
				<<SwitchOn Coche>>;
		],
 has	male static;

Atrezzo	Cristalera "cristalera de colores"
 with	found_in Patio Recibidor,
		name_f	'cristalera',
		name_m	'panel',
		adjectives
			'coloreada' 'colores' 'policromada' 'policromado' 'tintada'
			'tintado' 'traslúcida' 'traslúcido',
		description [;
			if (location == Patio) return O__M(self, 1);
			O__M(self, 2);
			if (self hasnt described) O__M(self, 3);
			return O__M(self, 4);
		],
 has	female;

Item	PuertaDelantera "puerta de entrada"
 with	found_in Patio Recibidor,
		name_f	'entrada' 'puerta' 'salida',
		gender	G_FEMENINO,
		adjectives 'casa' 'delantera' 'principal',
		description [;
			if (location == Patio) return O__M(self, 1);
			return O__M(self, 2);
		],
		door_dir [;
			if (location == Patio) return n_to;
			return s_to;
		],
		door_to [
			obj i ks;
			obj = i = ks = 0;
			!! 1) Al entrar en la casa:
			if (location == Patio) return Recibidor;
			!! 2) Al salir de la casa. Si el abrigo no está en el perchero:
			if (abrigo notin RecibidorPerchero) {
				O__M(self, 3);
				new_line;
				return Patio;
			}
			!! 3) Al salir. Si Silvia no puede coger el abrigo porque ya está
			!! cargada con demasiadas cosas:
			!! FIXME - Modificar de forma que; si la capacidad total del PC
			!! está cubierta, y tiene el frasco de sales de colores en las
			!! manos, al intentar coger otro objeto el frasco se cae y se rompe
			objectloop(obj in player) i++;
			if ((i + 1) > player.capacity) {
				O__M(self, 4);
				return true;
			}
			!! 4) Al salir. Silvia coge el abrigo del perchero automáticamente:
			ks = keep_silent;
			keep_silent = true;
			<Take abrigo>;
			keep_silent = ks;
			O__M(self, 5);
			new_line;
			return Patio;
		],
		before [;
			Patio.in_destination = self;
			DefaultAction:
				if (self hasnt open) {
					print (parser) "abre puerta", "^";
					<<Open self>>;
				}
				print (parser) "ve a la puerta", "^";
				<<Go self>>;
			Pull:
				if (location == Patio) <<Close self>>;
				<<Open self>>;
			Push:
				if (location == Patio) <<Open self>>;
				<<Close self>>;
		],
 has	door female ~open openable remarkable scenery;


!!==============================================================================
!!
!!	9)	Recibidor
!!
!!------------------------------------------------------------------------------

!!	-	'general' se activa cuando Silvia regresa a la localidad después de
!!		haber estado ya en ella
Array colorFlags -> 3; ! hasta 16 flags
Indoors	Recibidor "Recibidor"
 with	name_f	'antesala' 'estancia' 'habitacion',
		name_m	'hall' 'recibidor' 'vestibulo',
		gender	G_MASCULINO,
		description [;
			if (self hasnt visited) {
				O__M(Silvia, 3);
				new_line;
				return O__M(self, 1);
			}
			if (PuertaDelantera hasnt open) O__M(self, 2);
			else O__M(self, 3);
			if (self has general) {
				print " ";
				O__M(self, 4);
				if (child(RecibidorPerchero) == false) O__M(self, 5);
				print ".";
			}
			new_line;
			return true;
		],
		after [;
			Go:
				if (self hasnt general)
					give self general;
		],
		n_to Salon,
		s_to [;
			if (PuertaDelantera hasnt open) give PuertaDelantera open;
			return PuertaDelantera;
		],
		out_to [; return self.s_to(); ],
		get_random_color [;
			switch (Shuffle(8, colorFlags)) {
				1:	return "amarillos";
				2:	return "naranjas";
				3:	return "violetas";
				4:	return "verdes";
				5:	return "rojos";
				6:	return "dorados";
				7:	return "turquesas";
				8:	return "cobaltos";
			}
		],
 has	male;

Item	-> RecibidorPerchero "perchero alto"
 with	name_f	'percha',
		name_m	'perchero',
		gender	G_MASCULINO,
		adjectives 'alto',
		describe [
			obj i;
			if (child(self) == false) return true;
			objectloop(obj in self && obj hasnt concealed) i++;
			if (i == 0) return true;
			new_line;
			if (i == 1 && child(self) == abrigo) return O__M(self, 4);
			if (i == 1) return O__M(self, 5);
			return O__M(self, 6);
		],
		description [
			obj i;
			O__M(self, 1);
			if (child(self) == false) ".";
			objectloop(obj in self && obj hasnt concealed) i++;
			if (i == 0) ".";
			if (i == 1) return O__M(self, 2);
			return O__M(self, 3);
		],
		react_before [;
!			Drop, Hang:
			Drop:
				if ((IndirectlyContains(player, noun))
					&& (noun has clothing)
					&& (noun hasnt worn)
					&& (second == nothing)) {
					<<PutOn noun self>>;
				}
		],
		before [;
			Pull, Push, PushDir, Take, Turn:
				return O__M(self, 7);
			Receive:
				if (noun hasnt clothing) {
					return O__M(self, 8, noun);
				}
		],
		after [;
			Receive:
				return O__M(self, 9, noun);
		],
 has	male supporter transparent;

Item	-> -> Abrigo "abrigo"
 class	Clothes,
 with	name_m	'abrigo',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
		before [;
			self.Clothes::before();
		],
		level 1,
 has	clothing male;

Furniture	-> RecibidorComoda "cómoda"
 class	Receptacle
 with	name_f	'comoda',
		name_m	'mobiliario' 'mueble',
		gender	G_FEMENINO,
		adjectives 'madera',
		description [; return O__M(self, 1); ],
 has	concealed female;


!!==============================================================================
!!
!!	10)	Salón
!!
!!------------------------------------------------------------------------------

Indoors	Salon "Salón"
 with	name_f	'estancia' 'habitacion' 'sala',
		name_m	'comedor' 'salon',
		gender	G_MASCULINO,
		description [;
			return O__M(self, 1);
		],
		s_to	Recibidor,
		w_to	Cocina,
 has	male;

Atrezzo	-> SalonVentanales "ventanales"
 with	name_f	'ventana',
		name_fp	'ventanas',
		name_m	'ventanal',
		name_mp	'ventanales',
		gender	G_MASCULINO + G_PLURAL,
		description [; return O__M(self, 1); ],
 has	male pluralname;

Atrezzo	-> SalonEstanterias "estanterías"
 with	name_f	'balda' 'estanteria' 'repisa',
		name_fp	'baldas' 'estanterias' 'repisas',
		name_m	'anaquel' 'estante' 'pluteo',
		name_mp	'anaqueles' 'estantes' 'pluteos',
		gender	G_FEMENINO + G_PLURAL,
		description [; return O__M(self, 1); ],
 has	female pluralname supporter transparent;

Atrezzo	-> -> SalonFiguras "figuras"
 with	name_f	'figura',
		name_fp	'figuras',
		gender	G_FEMENINO + G_PLURAL,
		description [; return O__M(self, 1); ],
 has	female pluralname;

Atrezzo	-> -> SalonLibros "libros"
 with	name_m	'libro',
		name_mp	'libros',
		gender	G_MASCULINO + G_PLURAL,
		description [; return O__M(self, 1); ],
 has	male pluralname;

Item	-> -> Frasco "adorno"
 with	name_m	'adorno' 'frasco',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
 has	concealed male;

Atrezzo	-> SalonMuebleBar "mueblebar"
 with	name_f	'bar',
		name_m	'mobiliario' 'mueble' 'mueblebar',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
 has	male ~open openable;

Furniture	-> SalonSofa "sofá"
 class	SmartEnterable
 with	name_m	'sofa',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
 has	concealed enterable male supporter transparent;

Furniture	-> SalonTelevisor "televisor"
 with	name_f	'television',
		name_m	'televisor',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
 has	concealed male;


!!==============================================================================
!!
!!	11)	Taller
!!
!!------------------------------------------------------------------------------

Indoors	Taller "Taller"
 with	name_m	'cuarto' 'taller',
		gender	G_MASCULINO,
 has	male;


!!==============================================================================
!!
!!	12)	Terraza trasera
!!
!!------------------------------------------------------------------------------

Outdoors	Terraza "Terraza trasera"
 with	name_f	'terraza',
		name_m	'mirador' 'patio',
		gender	G_FEMENINO,
		adjectives 'trasera' 'trasero',
 has	female;
